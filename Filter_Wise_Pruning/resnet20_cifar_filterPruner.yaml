#
# python3 compress_classifier.py --arch resnet20_cifar  ../../../data.cifar10 -p=50 --lr=0.3 --epochs=300 -b 128
# --compress=resnet20_cifar_baseline.yaml -j=1 --vs 0 --deterministic
#
pruners:
  filter_pruner:
    class: 'L1RankedStructureParameterPruner'
    reg_regims:
      # module.conv1.weight: [0.40, '3D']
      module.layer1.0.conv1.weight: [0.6, '3D']
      #module.layer1.0.conv2.weight: [0.30, '3D']
      module.layer1.1.conv1.weight: [0.6, '3D']
      # module.layer1.1.conv2.weight: [0.50, '3D']
      module.layer1.2.conv1.weight: [0.6, '3D']
      # module.layer1.2.conv2.weight: [0.45, '3D']
      module.layer2.0.conv1.weight: [0.6, '3D']
      # module.layer2.0.conv2.weight: [0.10, '3D']
      # module.layer2.0.downsample.0.weight: [0.25, '3D']
      module.layer2.1.conv1.weight: [0.6, '3D']
      # module.layer2.1.conv2.weight: [0.30, '3D']
      module.layer2.2.conv1.weight: [0.6, '3D']
      # module.layer2.2.conv2.weight: [0.15, '3D']
      module.layer3.0.conv1.weight: [0.6, '3D']
      # module.layer3.0.conv2.weight: [0.15, '3D']
      # module.layer3.0.downsample.0.weight: [0.30, '3D']
      module.layer3.1.conv1.weight: [0.6, '3D']
      # module.layer3.1.conv2.weight: [0.15, '3D']
      module.layer3.2.conv1.weight: [0.6, '3D']
      # module.layer3.2.conv2.weight: [0.40, '3D']
      # module.fc.weight: [0.60, '4D']

extensions:
  net_thinner:
      class: 'FilterRemover'
      thinning_func_str: remove_filters
      arch: 'resnet20_cifar'
      dataset: 'cifar10'

lr_schedulers:
   exp_finetuning_lr:
     class: ExponentialLR
     gamma: 0.95


policies:
  - pruner:
      instance_name: filter_pruner
    epochs: [120]

  - extension:
      instance_name: net_thinner
    epochs: [120]

  - lr_scheduler:
      instance_name: exp_finetuning_lr
    starting_epoch: 121
    ending_epoch: 300
    frequency: 1
